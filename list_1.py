import json

import pandas as pd

path = "~/Downloads/sbi_master_denom_corrected.csv"
path2 = "~/Downloads/sbi_master_not_correctable.csv"
df = pd.read_csv(path)
df2 = pd.read_csv(path2)
temp = []
for i in df['ATMID']:
    if i not in temp:
        temp.append(i)

for i in df2['ATMID']:
    if i not in temp:
        temp.append(i)
to_check = []

with open('writercorp_sbi_2023-06-08 00:00:00.json', 'r') as f:
    data = json.load(f)

atmid = data['filesToProcess']

for i in atmid:
    if i not in temp:
        to_check.append(i)

print(len(to_check))
print(to_check)

temp = ["DBBK000145176", "DFBK000145179", "S1BB000300392", "S1BB000300402", "S1BB000822151", "S1BB001377083",
        "S1BB001891103", "S1BB001891133", "S1BB005626043", "S1BB005626048", "S1BB005626099", "S1BB005783038",
        "S1BB005783039", "S1BB005922118", "S1BB006240421", "S1BB007074193", "S1BB007252054", "S1BB008851081",
        "S1BB014821382", "S1BB015077024", "S1BB015077049", "S1BB015077079", "S1BB070103029", "S1BB070103032",
        "S1BB070120009", "S1BB070120019", "S1BB070120079", "S1BG000432058", "S1BH001469025", "S1BW000178013",
        "S1BW000178014", "S1BW000178058", "S1BW000262115", "S1BW000432051", "S1BW000527011", "S1BW000822083",
        "S1BW000947026", "S1BW000947048", "S1BW000947049", "S1BW000947092", "S1BW000947096", "S1BW001171159",
        "S1BW005626024", "S1BW005626026", "S1BW005626029", "S1BW005626052", "S1BW005626073", "S1BW005626076",
        "S1BW005626091", "S1BW005626095", "S1BW007074189", "S1BW007252010", "S1BW007252022", "S1BW007252028",
        "S1BW007252031", "S1BW007252033", "S1BW007252035", "S1BW007252093", "S1BW014821058", "S1BW014821074",
        "S1BW015077027", "S1BW015077085", "S1BW070094004", "S1BW070094010", "S1BW070103013", "S1BW070103015",
        "S1BW070103016", "S1BW070103019", "S1BW070103023", "S1BW070103024", "S1BW070103025", "S1BW070103034",
        "S1BW070103035", "S1BW070120011", "S1BW070120012", "S1BW070120017", "S1BW070120023", "S1NB000078276",
        "S1NB000078455", "S1NB000262086", "S1NB000822116", "S1NB001891130", "S1NB005626069", "S1NB005626075",
        "S1NB005626081", "S1NB005626083", "S1NB005626084", "S1NB007252050", "S1NB007252057", "S1NB007252060",
        "S1NB010283280", "S1NB014821044", "S1NB014821057", "S1NB014821059", "S1NB014821151", "S1NB070094013",
        "S1NB070103003", "S1NB070103020", "S1NB070120015", "S1NC070094017", "S1NH060289142", "S1NW000004159",
        "S1NW000004160", "S1NW000004161", "S1NW000004162", "S1NW000048015", "S1NW000048032", "S1NW000048036",
        "S1NW004789117", "S1NW004789118", "S1NW004789119", "S1NW004789149", "S1NW007252037", "S1NW007252064",
        "S1NW014821317", "S1NW014821318", "S1NW014821321", "S1NW014821328", "S1NW070094015", "SYN2000827080",
        "SYN2000827081", "SYN2000827082", "SYN2000827083", "SYN2000827084", "SYN2000835120", "SYN2000835121",
        "T1BF000048174", "T1BF001377056", "T1BF001377072", "T1BH000074202", "T1BH000300367", "T1BH000300397",
        "T1BH000399091", "T1BH000399101", "T1BH000399104", "T1BH000432243", "T1BS000048177", "T1BY000078477",
        "T1BY000078481", "T1BY000078482", "T1BY000078489", "T1BY000083062", "T1BY000181273", "T1BY003030463",
        "T1BY003030465", "T1BY015077010", "T1BY015077080", "T1BY015077082", "T1BY015077101", "T1BY015077102",
        "T1BY070120077", "T1NF000837079", "T1NF000837080", "T1NF000837082", "T1NF000913154", "T1NH002733015",
        "T1NH002733019", "T1NH002733022", "T1NY000078460", "T1NY070094024", "S1BB000195091", "S1BB000195096",
        "S1BB000195097", "S1BB000195098", "S1BB000195100", "S1BB000195103", "S1BB000195105", "S1BB000195212",
        "S1BB000195214", "S1BB000195216", "S1BB000195220", "S1BB000195251", "S1BB005922138", "S1BB015077105",
        "S1BB015077111", "S1BB015077112", "S1BB015077120", "S1BB015077123", "S1BB015077135", "S1BB015077151",
        "S1BW000195099", "S1BW000195101", "S1BW000195102", "S1BW000195104", "S1BW000195107", "S1BW000195108",
        "S1BW000195111", "S1BW000195213", "S1BW000195215", "S1BW000195219", "S1BW014821386", "S1BW015077078",
        "S1BW015077083", "S1BW015077106", "S1BW015077107", "S1BW015077115", "S1BW015077117", "S1BW015077118",
        "S1BW015077119", "S1BW015077121", "S1BW015077122", "S1BW015077124", "S1BW015077128", "S1BW015077133",
        "S1BW015077134", "S1BW015077136", "S1BW064022020", "SYB2000827316", "SYN2000947074", "T1BY000104110",
        "T1BY000181280", "T1BY002053250", "T1BY015077081",
        ]


"""these 14 ids are missing in new pnb denom mapping provided by writer pnb = ['A1110210', 'A1125610', 'A1178510', 
'A1191110', 'A1214810', 'A2124210', 'A2187110', 'DC308000', 'N2169400', 'N4585900', 'N6153000', 'N8150500', 
'N8308000', 'NB600100'] 

confusing_pnb = ['D1015310', 'D1038920', 'D1770400', 'D2585900', 'D3076100', 'D5623800', "D5762600", "D6084600", 
"D6149400", "D7060700", 'DA386900', ] 

more_confusing = ['10416601', ]
"""